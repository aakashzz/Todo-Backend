// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubTodoStatus {
  complete
  panding
}

model User {
  id             Int           @id @default(autoincrement())
  fullName       String
  email          String        @unique
  password       String
  profilePicture String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  refreshToken   String?
  TodoId         Todo[]
  SubTodoId      SubTodo[]
  DayReportId    DayReport[]   @relation("UserDetailsInDayReport")
  WeekReportId   WeekReport[]  @relation("UserDetailsWeekReport")
  MonthReportId  MonthReport[] @relation("UserDetailsMonthReport")
}

model Todo {
  id          Int         @id @default(autoincrement())
  title       String
  subTodos    SubTodo[]   @relation("SubTodos")
  createdBy   User        @relation(fields: [userId], references: [id])
  userId      Int
  DayReportId DayReport[] @relation("DayReport")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model SubTodo {
  id        Int           @id @default(autoincrement())
  content   String
  todoId    Int           @unique
  todo      Todo          @relation("SubTodos", fields: [todoId], references: [id])
  status    SubTodoStatus @default(panding)
  createdBy User          @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model DayReport {
  id            Int          @id @default(autoincrement())
  user          User         @relation("UserDetailsInDayReport", fields: [userId], references: [id])
  userId        Int
  date          DateTime
  totalComplete Int
  totalPanding  Int
  todo          Todo         @relation("DayReport", fields: [todoId], references: [id])
  todoId        Int          @unique
  WeekReportId  WeekReport[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model WeekReport {
  id            Int           @id @default(autoincrement())
  user          User          @relation("UserDetailsWeekReport", fields: [userId], references: [id])
  userId        Int
  date          DateTime
  totalScore    Int
  dayReport     DayReport     @relation(fields: [dayReportId], references: [id])
  dayReportId   Int
  MonthReportId MonthReport[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model MonthReport {
  id           Int        @id @default(autoincrement())
  user         User       @relation("UserDetailsMonthReport", fields: [userId], references: [id])
  userId       Int
  date         DateTime
  totalScore   Int
  weekReport   WeekReport @relation(fields: [weekReportId], references: [id])
  weekReportId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
